#!/usr/bin/env node

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
const path = require("path");
const doT = require("dot");
const marked = require("marked");
const _ = require("underscore");
const glob = require("glob");
const mkdirp = require("mkdirp");
const hljs = require("highlight.js");
const fsx = require("fs-extra");
const chokidar = require("chokidar");
const program = require("commander");
doT.templateSettings.strip = false;
const CONFIG_DEFAULT = {
    prefix: "/",
    out: "out",
    layout: "layout",
    content: "content",
    assets: "assets"
};
let cli = program
    .version('1.1.1')
    .command("page-gen")
    .description("Creates a new website for given directory or working directory")
    .arguments("[root]")
    .option('-w, --watch', 'watch mode')
    .parse(process.argv);
const ROOT = (cli.args[0] ? path.join(process.cwd(), cli.args[0]) : process.cwd());
const WATCH = cli["watch"];
const CONFIG = _.extend({}, CONFIG_DEFAULT, fs.existsSync(path.join(ROOT, "page.config.json")) ? JSON.parse(fs.readFileSync(path.join(ROOT, "page.config.json"), "utf8")) : {});
// set paths
const CONTENT = path.join(ROOT, CONFIG.content);
const LAYOUT = path.join(ROOT, CONFIG.layout);
const OUT = path.join(ROOT, CONFIG.out);
const ASSETS = path.join(ROOT, CONFIG.assets);
if (WATCH) {
    if (path.relative(ROOT, OUT)[0] != ".")
        throw "Watch mode is not supported if out directory is within root. Try to configure the 'out' options in page.config.json";
    let build = false;
    let watcher = chokidar.watch(ROOT, { persistent: true });
    let callback = (f) => {
        build = true;
        setTimeout(() => {
            if (build) {
                console.log("Rebuilding... " + new Date());
                main(ROOT, CONTENT, LAYOUT, ASSETS, OUT, CONFIG, WATCH);
                build = false;
            }
        }, 1000);
    };
    watcher
        .on('add', callback)
        .on('change', callback)
        .on('unlink', callback)
        .on('error', callback);
}
else {
    main(ROOT, CONTENT, LAYOUT, ASSETS, OUT, CONFIG, WATCH);
}
function main(ROOT, CONTENT, LAYOUT, ASSETS, OUT, CONFIG, isWatching) {
    // collect files
    const CONTENT_FILES = glob.sync(path.join(CONTENT, "**/*.*"));
    const LAYOUT_FILES = glob.sync(path.join(LAYOUT, "**/*.*"));
    const ASSET_FILES = glob.sync(path.join(ASSETS, "**/*.*"));
    // Create page-templates
    function createPage(filename) {
        let page = {
            path: filename,
            rawContent: fs.readFileSync(filename, "utf8"),
            name: path.basename(filename).replace(/\.[^/.]+$/, ""),
            filename: path.basename(filename),
            folder: path.dirname(filename),
            ext: path.extname(filename),
            userData: {}
        };
        page.isMarkdown = page.ext.toLocaleUpperCase() == ".MD";
        page.template = doT.template(page.rawContent, null, page.userData);
        page.outPath = path.join(path.relative(CONTENT, page.folder), page.name + ".html");
        page.href = CONFIG.prefix + page.outPath;
        return page;
    }
    const CONTENT_PAGES = CONTENT_FILES.map(createPage);
    const LAYOUT_PAGES = LAYOUT_FILES.map(createPage);
    // Build layout graph
    const LAYOUTS_BY_NAME = {};
    LAYOUT_PAGES.forEach(x => LAYOUTS_BY_NAME[x.name] = x);
    LAYOUT_PAGES.forEach(x => x.layout = LAYOUTS_BY_NAME[x.userData.$layout]);
    CONTENT_PAGES.forEach(x => x.layout = LAYOUTS_BY_NAME[x.userData.$layout]);
    function renderLayout(layout, data, content) {
        data["$content"] = content;
        let newContent = layout.template(data);
        if (layout.layout)
            return renderLayout(layout.layout, data, newContent);
        else
            return newContent;
    }
    // clear output folder
    if (fs.existsSync(OUT)) {
        function clearDir(inputPath, keepFolder = false) {
            fs.readdirSync(inputPath).forEach((fileOrFolder) => {
                var filePath = path.join(inputPath, fileOrFolder);
                if (fs.statSync(filePath).isFile())
                    fs.unlinkSync(filePath);
                else
                    clearDir(filePath);
            });
            if (!keepFolder)
                fs.rmdirSync(inputPath);
        }
        clearDir(OUT, true);
    }
    // copy assets
    ASSET_FILES.forEach(inputPath => {
        let targetPath = path.join(OUT, path.relative(ROOT, inputPath));
        mkdirp.sync(path.dirname(targetPath));
        fsx.copySync(inputPath, targetPath);
    });
    // render pages
    marked.setOptions({
        highlight: (code, lang) => {
            let res;
            if (!lang)
                res = hljs.highlightAuto(code).value;
            else
                res = hljs.highlight(lang, code).value;
            return res;
        }
    });
    function renderPage(page) {
        let subst = null;
        let abort = null;
        console.log(page.path);
        const TEMPLATE_DATA = createTemplateData(page);
        TEMPLATE_DATA["subst"] = (page) => subst = page;
        TEMPLATE_DATA["abort"] = () => abort = true;
        let html = "";
        if (page.template)
            html = page.template(TEMPLATE_DATA);
        if (page.isMarkdown)
            html = marked.parse(html);
        if (page.layout)
            html = renderLayout(page.layout, TEMPLATE_DATA, html);
        if (subst != null) {
            var extended = _.extend({}, subst);
            extended.href = page.href;
            extended.outPath = page.outPath;
            extended.userData = _.extend({}, subst.userData, page.userData);
            return renderPage(extended);
        }
        if (abort != null)
            return null;
        return html;
    }
    function createTemplateData(page, userData) {
        return {
            $page: page,
            $model: userData || page.userData,
            $layouts: LAYOUTS_BY_NAME,
            $pages: CONTENT_PAGES,
            $config: CONFIG,
            href: (rel) => path.normalize(path.join(CONFIG.prefix, rel)).replace(/\\/g, "/"),
            asset: (rel) => path.normalize(path.join(CONFIG.prefix, CONFIG.assets, rel)).replace(/\\/g, "/"),
            renderLayout: function (layout, userData) {
                LAYOUTS_BY_NAME[layout].template(createTemplateData(page, userData));
            },
            renderPage: renderPage,
        };
    }
    for (let i = 0; i < CONTENT_PAGES.length; i++) {
        var html = renderPage(CONTENT_PAGES[i]);
        if (html) {
            const filename = path.join(OUT, CONTENT_PAGES[i].outPath);
            mkdirp.sync(path.dirname(filename));
            fs.writeFileSync(filename, html);
        }
    }
    console.log("Done");
    if (!isWatching)
        process.exit();
}
;
//# sourceMappingURL=data:application/json;base64,